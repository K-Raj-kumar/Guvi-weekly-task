1.Do the below programs in anonymous function & IIFE
 Print odd numbers in an array
 Convert all the strings to title caps in a string array
 Sum of all numbers in an array
 Return all the prime numbers in an array
 Return all the palindromes in an array
 Return median of two sorted arrays of the same size.
 Remove duplicates from an array
 Rotate an array by k times


1. Print Odd Numbers in an Array:

```javascript
// Anonymous Function
function printOddNumbers(arr) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 !== 0) {
      console.log(arr[i]);
    }
  }
}

// IIFE
(function(arr) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 !== 0) {
      console.log(arr[i]);
    }
  }
})([1, 2, 3, 4, 5]);
```

2. Convert All Strings to Title Caps in a String Array:

```javascript
// Anonymous Function
function titleCaseStrings(arr) {
  return arr.map(str => str.charAt(0).toUpperCase() + str.slice(1));
}

// IIFE
const result = (function(arr) {
  return arr.map(str => str.charAt(0).toUpperCase() + str.slice(1));
})(["hello", "world", "javascript"]);
console.log(result);
```

3. Sum of All Numbers in an Array:

```javascript
// Anonymous Function
function sumOfNumbers(arr) {
  return arr.reduce((sum, num) => sum + num, 0);
}

// IIFE
const total = (function(arr) {
  return arr.reduce((sum, num) => sum + num, 0);
})([1, 2, 3, 4, 5]);
console.log(total);
```

4. Return All Prime Numbers in an Array:

```javascript
// Anonymous Function
function isPrime(num) {
  if (num <= 1) return false;
  if (num <= 3) return true;
  if (num % 2 === 0 || num % 3 === 0) return false;

  for (let i = 5; i * i <= num; i += 6) {
    if (num % i === 0 || num % (i + 2) === 0) return false;
  }
  return true;
}

function getPrimeNumbers(arr) {
  return arr.filter(num => isPrime(num));
}

// IIFE
const primes = (function(arr) {
  return arr.filter(num => isPrime(num));
})([2, 3, 5, 7, 10, 11]);
console.log(primes);
```

5. Return All Palindromes in an Array:

```javascript
// Anonymous Function
function isPalindrome(str) {
  const cleanedStr = str.toLowerCase().replace(/[^a-zA-Z0-9]/g, "");
  const reversedStr = cleanedStr.split("").reverse().join("");
  return cleanedStr === reversedStr;
}

function findPalindromes(arr) {
  return arr.filter(item => isPalindrome(item));
}

// IIFE
const palindromes = (function(arr) {
  return arr.filter(item => isPalindrome(item));
})(["racecar", "hello", "level", "world", "deified"]);
console.log(palindromes);
```

6. Return Median of Two Sorted Arrays of the Same Size:

```javascript
// Anonymous Function
function findMedianSortedArrays(nums1, nums2) {
  const mergedArray = [...nums1, ...nums2].sort((a, b) => a - b);
  const middleIndex = Math.floor(mergedArray.length / 2);
  
  if (mergedArray.length % 2 === 0) {
    return (mergedArray[middleIndex - 1] + mergedArray[middleIndex]) / 2;
  } else {
    return mergedArray[middleIndex];
  }
}

// IIFE
const median = (function(nums1, nums2) {
  const mergedArray = [...nums1, ...nums2].sort((a, b) => a - b);
  const middleIndex = Math.floor(mergedArray.length / 2);
  
  if (mergedArray.length % 2 === 0) {
    return (mergedArray[middleIndex - 1] + mergedArray[middleIndex]) / 2;
  } else {
    return mergedArray[middleIndex];
  }
})([1, 3], [2, 4]);
console.log(median);
```

7. Remove Duplicates from an Array:

```javascript
// Anonymous Function
function removeDuplicates(arr) {
  return Array.from(new Set(arr));
}

// IIFE
const uniqueArray = (function(arr) {
  return Array.from(new Set(arr));
})([1, 2, 2, 3, 3, 4, 5, 5]);
console.log(uniqueArray);
```

8. Rotate an Array by k Times:

```javascript
// Anonymous Function
function rotateArray(arr, k) {
  const n = arr.length;
  const rotatedArray = [];

  for (let i = 0; i < n; i++) {
    rotatedArray[(i + k) % n] = arr[i];
  }

  return rotatedArray;
}

// IIFE
const rotated = (function(arr, k) {
  const n = arr.length;
  const rotatedArray = [];

  for (let i = 0; i < n; i++) {
    rotatedArray[(i + k) % n] = arr[i];
  }

  return rotatedArray;
})([1, 2, 3, 4, 5], 2);
console.log(rotated);
```


2.Do the below programs in arrow functions.
 Print odd numbers in an array
 Convert all the strings to title caps in a string array
 Sum of all numbers in an array
 Return all the prime numbers in an array
 Return all the palindromes in an array

1. Print Odd Numbers in an Array:

```javascript
const printOddNumbers = (arr) => {
  arr.forEach((num) => {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
};

printOddNumbers([1, 2, 3, 4, 5]);
```

2. Convert All Strings to Title Caps in a String Array:

```javascript
const titleCaseStrings = (arr) => {
  return arr.map((str) => str.charAt(0).toUpperCase() + str.slice(1));
};

const result = titleCaseStrings(["hello", "world", "javascript"]);
console.log(result);
```

3. Sum of All Numbers in an Array:

```javascript
const sumOfNumbers = (arr) => arr.reduce((sum, num) => sum + num, 0);

const total = sumOfNumbers([1, 2, 3, 4, 5]);
console.log(total);
```

4. Return All Prime Numbers in an Array:

```javascript
const isPrime = (num) => {
  if (num <= 1) return false;
  if (num <= 3) return true;
  if (num % 2 === 0 || num % 3 === 0) return false;

  for (let i = 5; i * i <= num; i += 6) {
    if (num % i === 0 || num % (i + 2) === 0) return false;
  }
  return true;
};

const getPrimeNumbers = (arr) => {
  return arr.filter((num) => isPrime(num));
};

const primes = getPrimeNumbers([2, 3, 5, 7, 10, 11]);
console.log(primes); 
```

5. Return all the palindromes in an array
Certainly! Here's an example of how to return all the palindromes in an array using arrow functions:

```javascript
const isPalindrome = (str) => {
  const cleanedStr = str.toLowerCase().replace(/[^a-zA-Z0-9]/g, "");
  const reversedStr = cleanedStr.split("").reverse().join("");
  return cleanedStr === reversedStr;
};

const findPalindromes = (arr) => {
  return arr.filter((item) => isPalindrome(item));
};

const palindromes = findPalindromes(["racecar", "hello", "level", "world", "deified"]);
console.log(palindromes);
```
